name: Docker

on:
  push:
    branches: [ "main", "latest" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "latest" ]

jobs:
  # ===============================================================
  # == JOB FOR GITHUB ACTIONS                                    ==
  # ===============================================================
  build_on_github:
    # This entire job will only run on GitHub
    if: ${{ !env.GITEA_ACTIONS }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          curl -sL -o cosign https://github.com/sigstore/cosign/releases/download/v2.2.4/cosign-linux-amd64
          chmod +x cosign
          ./cosign sign --yes "${TAGS}@${DIGEST}"


  # ===============================================================
  # == JOB FOR GITEA ACTIONS                                     ==
  # ===============================================================
  build_on_gitea:
    # This entire job will only run on Gitea
    if: ${{ env.GITEA_ACTIONS }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into Gitea Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ gitea.instance }}/${{ gitea.owner }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.GITEA_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ gitea.instance }}/${{ gitea.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ gitea.instance }}/${{ gitea.repository }}:buildcache
          cache-to: type=registry,ref=${{ gitea.instance }}/${{ gitea.repository }}:buildcache,mode=max